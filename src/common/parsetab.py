
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSDIVIDE EQUALS ID LPAREN MINUS NUMBER PLUS RPAREN TIMESexpression : NUMBERexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : MINUS expression %prec UMINUSexpression : ID EQUALS expressionexpression : ID\nexpression : ID LPAREN expression RPAREN\n'
    
_lr_action_items = {'NUMBER':([0,3,4,6,7,8,9,12,13,],[2,2,2,2,2,2,2,2,2,]),'LPAREN':([0,3,4,5,6,7,8,9,12,13,],[4,4,4,13,4,4,4,4,4,4,]),'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,],[3,7,-1,3,3,-9,3,3,3,3,-7,7,3,3,-2,-3,-4,-5,-6,7,7,-10,]),'ID':([0,3,4,6,7,8,9,12,13,],[5,5,5,5,5,5,5,5,5,]),'$end':([1,2,5,10,14,15,16,17,18,19,21,],[0,-1,-9,-7,-2,-3,-4,-5,-6,-8,-10,]),'PLUS':([1,2,5,10,11,14,15,16,17,18,19,20,21,],[6,-1,-9,-7,6,-2,-3,-4,-5,-6,6,6,-10,]),'TIMES':([1,2,5,10,11,14,15,16,17,18,19,20,21,],[8,-1,-9,-7,8,8,8,-4,-5,-6,8,8,-10,]),'DIVIDE':([1,2,5,10,11,14,15,16,17,18,19,20,21,],[9,-1,-9,-7,9,9,9,-4,-5,-6,9,9,-10,]),'RPAREN':([2,5,10,11,14,15,16,17,18,19,20,21,],[-1,-9,-7,18,-2,-3,-4,-5,-6,-8,21,-10,]),'EQUALS':([5,],[12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,4,6,7,8,9,12,13,],[1,10,11,14,15,16,17,19,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',17),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',22),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',23),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',24),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',25),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',37),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',42),
  ('expression -> ID EQUALS expression','expression',3,'p_statement_assign','parser.py',46),
  ('expression -> ID','expression',1,'p_expression_var','parser.py',51),
  ('expression -> ID LPAREN expression RPAREN','expression',4,'p_expression_func','parser.py',60),
]
